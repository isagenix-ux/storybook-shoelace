{"version":3,"file":"stories-ShoelaceButton-stories.b11b0bf749e24a4eddea.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA","sources":["webpack:///./src/stories/ShoelaceButton.stories.ts"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport '@shoelace-style/shoelace/dist/components/button/button';\nimport '@shoelace-style/shoelace/dist/components/icon/icon';\nimport React from 'react';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'sl-button': any;\n      'sl-icon': any;\n    }\n  }\n}\n\nconst meta: Meta = {\n  title: 'Shoelace/Button',\n  component: 'sl-button',\n  tags: ['autodocs'],\n  argTypes: {\n    // Variants\n    variant: {\n      control: 'select',\n      options: ['default', 'primary', 'success', 'neutral', 'warning', 'danger', 'text'],\n      description: \"The button's theme variant\",\n      defaultValue: 'default'\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n      description: \"The button's size\",\n      defaultValue: 'medium'\n    },\n    // Boolean properties\n    caret: {\n      control: 'boolean',\n      description: 'Draws the button with a caret',\n      defaultValue: false\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Disables the button',\n      defaultValue: false\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Draws the button in a loading state',\n      defaultValue: false\n    },\n    outline: {\n      control: 'boolean',\n      description: 'Draws an outlined button',\n      defaultValue: false\n    },\n    pill: {\n      control: 'boolean',\n      description: 'Draws a pill-style button with rounded edges',\n      defaultValue: false\n    },\n    // Form properties\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'The type of button',\n      defaultValue: 'button'\n    },\n    // Link properties\n    href: {\n      control: 'text',\n      description: 'When set, the button will be rendered as an <a> element',\n    },\n    target: {\n      control: 'select',\n      options: ['_blank', '_parent', '_self', '_top'],\n      description: 'Where to display linked URL',\n    },\n    rel: {\n      control: 'text',\n      description: 'The relationship of the linked URL',\n      defaultValue: 'noreferrer noopener'\n    },\n    // Content\n    children: {\n      control: 'text',\n      description: \"The button's label\",\n    }\n  }\n};\n\nexport default meta;\ntype Story = StoryObj;\n\n// Base button\nexport const Default: Story = {\n  args: {\n    variant: 'default',\n    size: 'medium',\n    children: 'Button',\n  },\n};\n\n// Variants (add Text here with other variants)\nexport const Primary: Story = {\n  args: {\n    variant: 'primary',\n    children: 'Primary',\n  },\n};\n\nexport const Success: Story = {\n  args: {\n    variant: 'success',\n    children: 'Success',\n  },\n};\n\nexport const Warning: Story = {\n  args: {\n    variant: 'warning',\n    children: 'Warning',\n  },\n};\n\nexport const Danger: Story = {\n  args: {\n    variant: 'danger',\n    children: 'Danger',\n  },\n};\n\nexport const Text: Story = {\n  args: {\n    variant: 'text',\n    children: 'Text Button',\n  },\n};\n\n// Sizes\nexport const Small: Story = {\n  args: {\n    size: 'small',\n    children: 'Small',\n  },\n};\n\nexport const Large: Story = {\n  args: {\n    size: 'large',\n    children: 'Large',\n  },\n};\n\n// States\nexport const Loading: Story = {\n  args: {\n    loading: true,\n    children: 'Loading',\n  },\n};\n\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n    children: 'Disabled',\n  },\n};\n\n// Styles\nexport const Outline: Story = {\n  args: {\n    outline: true,\n    children: 'Outline',\n  },\n};\n\nexport const Pill: Story = {\n  args: {\n    pill: true,\n    children: 'Pill',\n  },\n};\n\n// Link button\nexport const Link: Story = {\n  args: {\n    href: 'https://example.com',\n    target: '_blank',\n    children: 'Link Button',\n  },\n};\n\n// Move this to the end\nexport const PrefixAndSuffixIcons: Story = {\n  args: {\n    variant: 'default',\n    size: 'medium',\n    children: 'Settings',\n  },\n  render: (args) => React.createElement(\n    'sl-button',\n    {\n      variant: args.variant,\n      size: args.size,\n      disabled: args.disabled,\n      loading: args.loading,\n      outline: args.outline,\n      pill: args.pill,\n      type: args.type,\n      href: args.href,\n      target: args.target,\n      rel: args.rel,\n    },\n    [\n      React.createElement('sl-icon', { slot: 'prefix', name: 'gear', key: 'prefix' }),\n      args.children,\n      React.createElement('sl-icon', { slot: 'suffix', name: 'chevron-right', key: 'suffix' })\n    ]\n  )\n}; "],"names":[],"sourceRoot":""}